/*
 * test on operators
 */
print("Testing operators")
x = 123
y = 35
assert(-x, -123) 
assert(!0, 1)
assert(!x, 0)
assert(~0, -1)
assert(x + y, 158)
assert(x - y, 88)
assert(x * y, 4305)
assert(x / y, 3)
assert(x % y, 18)
assert(x shl 2, 492)
assert(x shr 2, 30)
assert(x < x, 0)
assert(x < y, 0)
assert(y < x, 1)
assert(x > x, 0)
assert(x > y, 1)
assert(y > x, 0)
assert(x <= x, 1)
assert(x <= y, 0)
assert(y <= x, 1)
assert(x >= x, 1)
assert(x >= y, 1)
assert(y >= x, 0)
assert(x == x, 1)
assert(x == y, 0)
assert(x != x, 0)
assert(x != y, 1)
assert(x & y, 35)
assert(x | y, 123)
assert(x xor y, 88)
assert(x*y+(-x)-x/-4*2+x%2+(x+y shl 3), 5507)
assert((x & ~1 | 0x100), 378)

x = q
y = 35.5
assert(-x, -q)
assert(x + y, 515.5)
assert(x - y, 444.5)
assert(x * y, 17040.0)
assert(y / x, 35.5 / 480.0)
assert(x % y, 18.5)
assert(x*y+(-x)-x/-4*2+x%2+(x+y*3), 17866.5)

assert(0 && 0, 0)
assert(0 && 1, 0)
assert(1 && 0, 0)
assert(1 && 1, 1)
assert(0 || 0, 0)
assert(0 || 1, 1)
assert(1 || 0, 1)
assert(1 || 1, 1)
assert(0 ? x : y, y)
assert(1 ? x : y, x)
assert(0 ? x : 1 ? y : 5, y)
assert(1 ? 0 ? 3 : y : 6, y)
assert(0 ? "abc" : "def", "def")
assert((0 ? #(1,2,3) : #(4,5,6)), #(4,5,6))
undef(xx)
assert(!!(x != y) && (x == y) || (x == y) ? x : y, y)

assert(0 && {xx = 5 3}, 0)
assert(defined(xx), 0)
assert(1 && {xx = 5 3}, 1)
assert(defined(xx), 1)
assert(0 || {xx = 10 3} || {xx = 11 4}, 1)
assert(xx, 10)
assert(1 ? {xx = 20 2} : {xx = 30 3}, 2)
assert(xx, 20)
assert(1 ? 0 ? {xx = 20 2} : {xx = 30 3} : 1 ? {xx = 40 4} : {xx = 50 5}, 3)
assert(xx, 30)

assert("abc" + "" + "def", "abcdef")
assert("abc" < "def", 1)
assert("abc" < "abcaa", 1)
assert("abc" > "def", 0)
assert("abc" > "abcaa", 0)
assert("abc" == "abcaa", 0)
assert("abc" != "abcaa", 1)
assert("abc" == "abc", 1)
assert("abc" != "abc", 0)
